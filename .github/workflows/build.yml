name: Build Vince

on:
    workflow_dispatch:
    push:
        branches: ["master"]
        tags: ["*"]
    pull_request:
        branches: ["*"]

defaults:
    run:
        shell: bash

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: stable

            - name: Setup Python3
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"

            - uses: actions/checkout@v5
              with:
                  fetch-depth: 0

            - name: Set Vars
              id: vars
              env:
                  REF_NAME: ${{ github.ref_name }}
              run: |
                  echo "ref_name=${REF_NAME//\//_}" >> $GITHUB_OUTPUT
                  echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - uses: actions/cache@v4
              if: "!startsWith(github.ref, 'refs/tags/')"
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Build Targets (_scripts/dist.py)
              run: python _scripts/dist.py --locked --ref "${{ steps.vars.outputs.ref_name }}"

            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: vince-artifacts-${{ steps.vars.outputs.ref_name }}-${{ steps.vars.outputs.sha_short }}
                  path: artifacts/
                  if-no-files-found: error

            - name: Publish Release
              uses: ncipollo/release-action@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  name: ${{ steps.vars.outputs.ref_name }}
                  tag: ${{ steps.vars.outputs.ref_name }}
                  artifacts: artifacts/*
                  generateReleaseNotes: true
                  replacesArtifacts: true
                  makeLatest: "true"
                  allowUpdates: "true"
                  artifactErrorsFailBuild: "true"
                  token: ${{ secrets.GITHUB_TOKEN }}
